apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {VM_BASENAME}-{vm-id}
  namespace: {vm-ns}
spec:
  dataVolumeTemplates:
  - apiVersion: cdi.kubevirt.io/v1beta1
    kind: DataVolume
    metadata:
      annotations:
        cdi.kubevirt.io/smartCloneFromExistingSnapshot: {vm-ns}/{VM_BASENAME}-{vm-ns}
      name: {VM_BASENAME}-{vm-id}
    spec:
      pvc:
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: {STORAGE_SIZE}
        volumeMode: Block
        storageClassName: {STORAGE_CLASS}
      source:
        snapshot:
          namespace: {vm-ns}
          name: {VM_BASENAME}-{vm-ns}
  runStrategy: Always
  template:
    metadata:
      labels:
        kubevirt.io/domain: {VM_BASENAME}
    spec:
      domain:
        cpu:
          cores: {VM_CPU_CORES}
        devices:
          disks:
          - disk:
              bus: virtio
            name: vda
          interfaces:
          - masquerade: {}
            model: virtio
            name: default
          networkInterfaceMultiqueue: true
          rng: {}
        features:
          smm:
            enabled: true
        firmware:
          bootloader:
            efi:
              secureBoot: false
        resources:
          requests:
            memory: {VM_MEMORY}
      evictionStrategy: LiveMigrate
      networks:
      - name: default
        pod: {}
      volumes:
      - dataVolume:
          name: {VM_BASENAME}-{vm-id}
        name: vda
