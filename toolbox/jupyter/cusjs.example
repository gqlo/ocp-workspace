from bokeh.plotting import figure, show
from bokeh.models import ColumnDataSource, CustomJS, Select
from bokeh.layouts import column
from bokeh.io import curdoc

# Define multiple data sets
datasets = [
    {'x': [1, 2, 3, 4, 5], 'y': [6, 7, 2, 4, 5]},
    {'x': [1, 2, 3, 4, 5], 'y': [5, 4, 3, 2, 1]},
    {'x': [1, 2, 3, 4, 5], 'y': [8, 5, 3, 2, 7]},
    {'x': [1, 2, 3, 4, 5], 'y': [1, 3, 6, 8, 5]},
    # Add more datasets as needed
]

# Create the ColumnDataSource
source = ColumnDataSource(data=datasets[0])

# Create the figure
p = figure(title="Switching between plots")
p.line('x', 'y', source=source)

# Create the CustomJS callback arguments dynamically
args = {'source': source}
for i, data in enumerate(datasets):
    args[f'data{i+1}'] = data

# Generate the JavaScript code to handle the datasets
js_code = """
    var data_sets = ["""
for i in range(len(datasets)):
    js_code += f"data{i+1}, "
js_code = js_code[:-2]  # Remove the last comma and space
js_code += """];
    source.data = data_sets[cb_obj.value];
    source.change.emit();
"""

# Create the CustomJS callback
callback = CustomJS(args=args, code=js_code)

# Create a Select widget with options for all datasets
options = [f"Dataset {i+1}" for i in range(len(datasets))]
select = Select(title="Select Dataset", value="0", options=[str(i) for i in range(len(datasets))])
select.js_on_change('value', callback)

# Layout and add to the current document
layout = column(select, p)
curdoc().add_root(layout)

# If running outside of a Bokeh server, use show to display the plot
# show(layout)

